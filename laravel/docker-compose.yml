version: '3.1'

services:

  web:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - .:/app/
    links:
      - php
    networks:
      - my-network

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    links:
      - postgres
      - rabbitmq
    volumes:
      - .:/app/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.my-app-http.entrypoints=web"
      - "traefik.http.routers.my-app-http.rule=Host(`my-app.localhost`)"
      - "traefik.http.services.my-app-http.loadbalancer.server.port=8000"
    networks:
      - my-network

  buggregator:
    container_name: my-buggregator
    image: ghcr.io/buggregator/server:latest
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.buggregator-http.entrypoints=web"
      - "traefik.http.routers.buggregator-http.rule=Host(`buggregator.localhost`)"
      - "traefik.http.services.buggregator-http.loadbalancer.server.port=8000"
    logging:
      driver: none
    networks:
      - my-network

  postgres:
    image: postgres:14.5-alpine
    environment:
      POSTGRES_DB: mypet
      POSTGRES_USER: mypet
      POSTGRES_PASSWORD: mypet
    volumes:
      - /opt/volumes/mypet/postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
#    volumes:
#      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
#      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
#      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    ports:
      - "5672:5672"
      - "15672:15672"

    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - my-network

networks:
    my-network:
      ipam:
        driver: default
        config:
          - subnet: 172.0.70.0/24